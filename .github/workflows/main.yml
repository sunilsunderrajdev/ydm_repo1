name: AWS Provisioning
on:
  push
env:
  AWS_REGION: "us-east-1"
permissions:
  id-token: write
  contents: read
jobs:
  AWSProvisioning:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::616611317351:role/github-aws-admin-role
          role-session-name: awsadminrolesession
          aws-region: ${{ env.AWS_REGION }}
      - name: Print assumes roles
        run: aws sts get-caller-identity 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        run:  |
            find -mindepth 1 -maxdepth 1 -type d -exec terraform init \;
      - name: Terraform Validate
        id: validate
        run: |
          find -mindepth 1 -maxdepth 1 -type d -exec terraform validate \;
      - name: Terraform Plan Level1
        working-directory: ./level1
        id: plan_level1
        run: terraform plan
        continue-on-error: true
      - name: Terraform Plan Level1 Status
        if: steps.plan_level1.outcome == 'failure'
        run: exit 1
      - name: Terraform Plan Level2
        working-directory: ./level2
        id: plan_level2
        run: terraform plan
        continue-on-error: true
      - name: Terraform Plan Level2 Status
        if: steps.plan_level2.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply Level1
        working-directory: ./level1
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
      - name: Terraform Apply Level2
        working-directory: ./level2
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve          
      - name: Terraform Plan Destroy
        id: plandestroy
        run: |
          find -mindepth 1 -maxdepth 1 -type d -exec terraform plan -destroy \; 
          continue-on-error: true
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/feature_vpc' && github.event_name == 'push'
        run: |
          find -mindepth 1 -maxdepth 1 -type d -exec terraform apply -destroy \; 
